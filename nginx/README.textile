h1. Описание

Рецепт для установки и автоматической конфигурации Nginx. Исключительно под Debian.

После первичной установки вы получаете следующие плюшки:

* Установленный и православно сконфигурированный Nginx.
* Nginx-status на 127.0.0.1.
* Мониторинг sites-enabled на предмет левых файлов.

h2. Требования

Для работы рецепта на ноде обязательно должен присутствовать рецепт php-fpm.

h2. Вспомогательные файлы

* @/opt/chef/nginx/templates/*@ - волшебные файлы для генерации конфигов.
* @/opt/chef/nginx/maintainance/*@ - сайт-заглушка на время проведения работ на сервере.

h1. Настройка

Вся конфигурация самого сервера, а также всех виртуальных хостов хранится в атрибутах ноды. Редактирование этой конфигурации производится из веб-интерфейса Chef-а, либо напрямую редактированием ноды через Knife.

bq. Удобный инструмент для редактирования и валидирования JSON-ов "jsonlint.com":http://www.jsonlint.com.

h2. Пример конфигурации

Ниже приводится конфигурация обычного сайта на PHP через PHP-FPM со статикой в нестандартном месте, плюс в ней показаны значения опций по умолчанию, так что, фактически, непосредственно сама конфигурация ещё меньше. [] - необязательный параметр.
<pre><code>nginx
├── user: (www-data)
├── mode: production
├── dirs
│   ├── config: (/etc/nginx)
│   ├── templates: (/opt/chef/nginx/templates)
│   ├── logs: (/var/log/nginx)
│   └── maintainance: (/opt/chef/nginx/maintainance)
├── server
│   ├── workers
│   │   ├── connections: (1024)
│   │   └── processes: (количество CPU)
│   ├── gzip
│   │   ├── enabled: (true)
│   │   ├── compression_level: (2)
│   │   ├── disable_for: (MSIE [1-6]\.(?!.*SV1))
│   │   ├── http_version: (1.0)
│   │   └── mime_types: ["text/html", ...]
│   └── settings
│       ├── (keepalive_timeout: 60),
│       ├── (server_names_hash_bucket: 64)
│       ├── (client_max_body_size: "30M")
│       ├── (client_body_timeout: 10)
│       └── [...]
└── sites
    ├── "site.ru"
    │    ├── modes: production[, ...]
    │    ├── listen: "123.45.67.89:80", ...
    │    ├── names: 'site.ru', 'www.site.ru', ...
    │    ├── [charset: "utf-8"]
    │    └── templates
    │        ├── 0: { name: "location-root" }
    │        ├── 1: { name: "location-static", args: { root: "/some/weird/path/to/static/files" } }
    │        └── 2: { name: "backend-php-fpm", args: { backend: "pool_0" } }
    └── ...</code></pre>

h2. Общие шаблоны

В @/opt/chef/nginx/templates@ лежат небольшие erb-файлы (которые берутся из самого рецепта), из которых и собирается конфиг. При каждом Шеф-ране, парсер автоматически подгружает шаблоны и передаёт им параметры из json-а виртуального хоста, а также атрибуты ноды. Таким образом, можно под каждый класс задач написать свои маленький шаблон, как угодно его параметризировать, придумать значения по умолчанию и использовать в рецептах.

h3. Текущий список шаблонов с описаниями

Вообще, идея в том, что можно вкладывать любые шаблоны в любые другие шаблоны. И, даже если такого шаблона нет, парсер просто поставит в конфиг строку вида @name args;@. Таким образом, вы можете в @templates@ указывать либо имя шаблона с его аргументами, либо любую другую директиву nginx-а - она просто отпарсится как есть. По этой же причине, в следующей таблице указаны не все, а наиболее полезные параметры.

|_. Имя |_. Назначение |_.  Параметры |_. Значение по умолчанию |
| location-base | Базовый location, следующие location-ы используют его, как основу. Вы тоже можете. | @location@ | Значение по умолчанию отсутствует |
| location-root | Отдаёт всё из определённой директории | @root@ | /var/www/virtual-hosts/<имя_сайта> |
|| Массив строк вида @{ "/mary /juana" }@ | @rewrites@ | [] |
||| @index@ | index.php index.phtml index.html index.htm |
| location-static | Отдаёт статитку из определённой директории, отключает access_log, включает клиентский кеш | @root@ | /var/www/static/<имя_сайта> |
||| @expires@ | 24h |
| backend-php-fpm | Перенаправляет запрос на PHP5-FPM | @location@ | ~ \.(php&#124;php4&#124;php5&#124;phtml)$ |
||| @root@ | /var/www/virtual-hosts/<имя_сайта> |
|| Параметры для fastcgi_param | @fcgi@ | Их много, смотрите сам шаблон |
|| Параметры для директивы try_files | @try_files@ | $fastcgi_script_name =404 |
|| Указывает на имя пула в PHP-FPM | @backend@ | pool_0 |
||| @root@ | /var/www/virtual-hosts/<имя_сайта> |
| backend-http | Перенаправляет запрос на HTTP-сервер, например Apache2 | @location@ | / |
||| @backend@ | http://127.0.0.1:8080 |
||| @redirect@ | off |
| location-deny-svn | Запрещает доступ ко всему, что оканчивается на .svn | - | - |
| location-deny-htfiles | Запрещает доступ ко всему, что оканчивается на .ht | - | - |
| location-deny-all | Запрещает доступ ко всему вообще | - | - |
| status-nginx | Включает страничку статуса Nginx по адресу /nginx-status/ с доступом только с 127.0.0.1 | - | - |
| status-php-fpm | Включает страничку статуса для определённого PHP-FPM пула | @location@ | / |
|| Аналогично @backend-php-fpm@ | @backend@ | pool_0 |

h3. Правила написания новых шаблонов

* Не пытайтесь написать супер-комбайн, старайтесь выделить минимальную, полноценную и, главное, реюзабельную единицу конфига.
* Остальное ограничено вашей фантазией. Да, правда.
